AWSTemplateFormatVersion: 2010-09-09

Mappings:
  RegionToImageId:
    us-east-1:
      ImageId: ami-b70554c8
    us-east-2:
      ImageId: ami-8c122be9
    us-west-1:
      ImageId: ami-e0ba5c83
    us-west-2:
      ImageId: ami-a9d09ed1
  
  RegionToNatId:
    us-east-1:
      ImageId: ami-01623d7b
Resources:
  #Network Configurations
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
  PrivateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}

  #Intrinsic Network Components
  PublicSubnetRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public Subnet Route Table.
  PrivateSubnetRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Private Subnet Route Table.

  RouteToInternetGateway:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      GatewayId: !Ref InternetGateway
      DestinationCidrBlock: 0.0.0.0/0
  
  RouteToNatInstance:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateSubnetRouteTable
      InstanceId: !Ref NatInstance
      DestinationCidrBlock: 0.0.0.0/0

  PublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      SubnetId: !Ref PublicSubnet
  PrivateSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateSubnetRouteTable
      SubnetId: !Ref PrivateSubnet

  InternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  #Instance Configurations
  Bastion:
    Type: 'AWS::EC2::Instance'
    Properties:
      KeyName: rhel-cloud-admin
      InstanceType: t2.micro
      ImageId: !FindInMap [RegionToImageId, !Ref 'AWS::Region', ImageId]
      # - RegionToImageId
      # - !Ref 'AWS::Region'
      # - ImageId
      # Use this if no NetworkInterfaces
      # SecurityGroups: []
      NetworkInterfaces:
        - DeviceIndex: 0
          AssociatePublicIpAddress: true
          DeleteOnTermination: true
          SubnetId: !Ref PublicSubnet
          GroupSet:
            - !Ref WebAppSecurityGroup
      Tags:
        - Key: Name
          Value: Bastion
        - Key: Technology
          Value: CloudFormation Created
        - Key: Modification
          Value: Success

  NatInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId: !FindInMap [RegionToNatId, !Ref 'AWS::Region', ImageId]
      NetworkInterfaces:
        - DeviceIndex: 0
          AssociatePublicIpAddress: true
          DeleteOnTermination: true
          SubnetId: !Ref PublicSubnet
          GroupSet:
            - !Ref WebAppSecurityGroup
      Tags:
        - Key: Name
          Value: NatInstance
  

  WebAppSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties: 
      GroupDescription: HTTP and SSH access only.
      VpcId: !Ref VPC
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
